#!/bin/env bash
#
# This script will run nightly
#
set -e

UpdateGithub() {
  multi-gitter --config ./cicd/multi-gitter-config run ./bulk-utils/enable_disabled_workflow.sh
}

UpdateDocs() {
  # Update Progress page in documentation
  git clone git@github.com:zopencommunity/meta.git meta_update
  cd meta_update

  # Generate the currency status
  ./tools/get_bump_status.sh docs/updatestatus.md

  # Generate the upstream status
  python3 ./tools/generate_zopencommunity_patch_report.py --report docs/upstreamstatus.md --images docs/images/upstream --start-date=2023-01-01

  python3 tools/create_cve_json.py --verbose --output-file docs/api/zopen_vulnerability.json

  # This script updates the status page
  #python3 tools/getbinaries.py

  # Generate a view of the newly released tools
  python3 tools/create_latest_release_doc.py --output docs/newly_released.md

  # Generate a view of the vulnerabilities in package releases
  python3 tools/create_vulnerability_doc.py --md-output-file docs/Vulnerabilities.md --xml-output-file docs/vulnerabilities_rss.xml

set -x
  # Generate zopen API Reference
  mkdir -p docs/api
  mkdir -p docs/reference
  . ./.env
  export ZOPEN_ROOTFS="na" # To workaround sourcing zopen-config error
  mkdir -p "man/man1/"
  zopen-help2man "man/man1/" # Generate man pages

  cat <<EOF > docs/reference/zopen-reference.md
# zopen reference documentation
This page provides information about the zopen interface. Click on any of the zopen commands listed below to access the reference guide describing how to utilize that command.
EOF

# Generate html and markdown pages
for man in man/man1/*.1;
do
  base=${man##*/};
  name=${base%%.1};
  html="docs/reference/${name}.html";
  cat <<EOF > docs/reference/${name}.md
<!-- Generated by /cicd/docupdate.sh -->
[](${name}.html ':include :type=iframe name="iframe1" width=100% frameborder="0" scrolling="no" onload="styleandresizeIframe(this)"')
EOF
  echo "* [${name}](/reference/${name})" >> docs/reference/zopen-reference.md
  groff -m mandoc -Thtml -Wall "${man}" >"${html}";
done

  # Commit it all back to the repo
  git config --global user.email "zosopentools@ibm.com"
  git config --global user.name "ZOS Open Tools"
  git add docs/*.md
  git add docs/*.xml
  git add docs/images/*.png
  git add docs/images/upstream/*
  git add docs/api/*
  git add docs/reference/*
  git commit -m "Updating docs/apis/reference"
  git status
  git pull --rebase
  git push origin
}

UpdateGithub
UpdateDocs
